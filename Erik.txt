Sub Button1_Click()

    Dim WSPartSpouse As Worksheet
    Dim WSReIterate As Worksheet
    Dim WSResults As Worksheet
    Dim WSProject As Worksheet
    Dim WSNewGraph As Worksheet
    Dim WSCompanyPlan As Worksheet
    Dim CurrentSavingsRate As Single
    Dim NextSavingsRate As Single
    Dim CurrentReplacePercent As Single
    Dim CurrentReplacePercentNeed As Single
    Dim SuggestedIncrease As Single
    Dim PreTaxSavingsRate As Single
    Dim DollarLimit As Single
    Dim PersonalSavingsRate As Single
    Dim ReplacementPercent As Single
    
    Dim X As Integer
    Dim Y As Integer
    Dim Z As Integer
    Dim AI As String
    
    Dim R1 As Range
    
    'Initialize the references to the various worksheets
    Set WSPartSpouse = Worksheets("Participant-Spouse")
    Set WSResults = Worksheets("Results")
    Set WSReIterate = Worksheets("ReIterate")
    Set WSProject = Worksheets("Project")
    Set WSNewGraph = Worksheets("NewGraph")
    Set WSCompanyPlan = Worksheets("Company-Plan")
    
    'Resetting for Auto Increase.  Calculations will occur
    WSPartSpouse.Range("D29").Value = WSReIterate.Range("B2").Value
    WSCompanyPlan.Range("D15").Value = WSReIterate.Range("B3").Value
    
    'Clear the previous data
    WSReIterate.Range("F5", "J110").Value = ""
    WSReIterate.Range("K5", "N110").Value = ""
    WSReIterate.Range("B6", "B20").Value = ""
    
    'Determine if auto increase is used
    AI = WSPartSpouse.Range("D27").Value
    
    'Set the starting rates.  Calculations will occur
    WSPartSpouse.Range("D10").Value = WSReIterate.Range("B4").Value
    WSPartSpouse.Range("D13").Value = WSReIterate.Range("B5").Value
    
    'If auto increase is used then increase the maximum for year of year comparsion
    If AI = "Y" Then
                   
            'Calculations will occur
            WSPartSpouse.Range("D29").Value = WSPartSpouse.Range("D29").Value + WSReIterate.Range("B4").Value
            WSCompanyPlan.Range("D15").Value = WSCompanyPlan.Range("D15").Value + WSReIterate.Range("B4").Value
                        
    End If
    
    'Initialize Variables
    CurrentSavingsRate = WSPartSpouse.Range("D10").Value
    CurrentReplacementPercent = WSResults.Range("D14").Value
    CurrentReplacementPercentNeed = WSResults.Range("D15").Value
    
    'Get the starting replacement need
    WSReIterate.Range("B7").Value = CurrentReplacementPercent
    WSReIterate.Range("B8").Value = CurrentReplacementPercentNeed
    
    'Copy the data for the graph
    GetStartingGraphData
        
    
    NextSavingsRate = CurrentSavingsRate
    
    'Calculate Pre Tax Savings Rate if the replacement need is not met
    If CurrentReplacementPercent < CurrentReplacementPercentNeed Then
    
        For X = 1 To 100
                    
                    'Increment the next savings rate
                    NextSavingsRate = NextSavingsRate + 0.01
                    
                    'Exit the loop if over 100%
                    If NextSavingsRate > 1 Then
                        Exit For
                    End If
                    
                                 
                    'Increase Auto increase max to remove the ceiling.  Note: changing these values will change the data on the Project tab
                    If AI = "Y" Then
                    
                        'Calculations will occur
                        WSPartSpouse.Range("D29").Value = WSPartSpouse.Range("D29").Value + 0.01
                        WSCompanyPlan.Range("D15").Value = WSCompanyPlan.Range("D15").Value + 0.01
                        
                    End If
                    
                    'Set the next savings rate.  Calculations will occur
                    WSPartSpouse.Range("D10").Value = NextSavingsRate
                    
                    'Load the results into the grid
                    WSReIterate.Cells((X + 4), 6).Value = NextSavingsRate
                    WSReIterate.Cells((X + 4), 7).Value = WSResults.Range("D14").Value
                    WSReIterate.Cells((X + 4), 8).Value = WSResults.Range("D18").Value
                    WSReIterate.Cells((X + 4), 9).Value = WSResults.Range("D21").Value
                    
                    'Load Variables
                    ReplacementPercent = WSResults.Range("D14").Value
                    SuggestedIncrease = WSResults.Range("D18").Value
                    PreTaxSavingsRate = NextSavingsRate
                    DollarLimit = WSResults.Range("D21").Value
                    
                    'If the dollar limit is reached decrement the savings rate and exit the loop
                    'We have reached the point of what can go into pre tax and we now
                    'need to see how much needs to go into personal savings
                    If DollarLimit > 0 Then
                    
                        WSReIterate.Range("B18").Value = PreTaxSavingsRate - 0.01
                        WSPartSpouse.Range("D10").Value = PreTaxSavingsRate - 0.01
                                                               
                        Exit For
                        
                    End If
                    
                    'If the replacement percent is greater that the need we have read the goal of pre tax savings
                    'and we exit the loop
                    If WSResults.Range("D14").Value > WSResults.Range("D15").Value Then
                        WSReIterate.Range("B18").Value = PreTaxSavingsRate
                        Exit For
                    End If
            
        
        Next
        
    Else
    
        'WSReIterate.Range("B12").Value = WSReIterate.Range("B4").Value
        
        'WSReIterate.Range("B13").Value = WSReIterate.Range("B12").Value - WSReIterate.Range("B4").Value
        
        'Exit Sub
    
    End If
    
    
    
    'Set the next Personal Savings Rate.  Using the same variable
    NextSavingsRate = WSReIterate.Range("B5").Value
    
    'Set New Personal Savings Rate starting value
    WSReIterate.Range("B19").Value = WSReIterate.Range("B5").Value
    
    
    'Calculate Personal Savings Rate if needed
    If DollarLimit > 0 Then
    
        For X = 1 To 100
        
                    'If the Replacement Percent from the previous loop is greater
                    'than the need then exit
                    If ReplacementPercent > WSResults.Range("D15").Value Then
                        Exit For
                    End If
                    
                    'Increment the next savings rate
                    NextSavingsRate = NextSavingsRate + 0.01
                    
                    'If the next savings rate is over 100% then exit
                    If NextSavingsRate > 1 Then
                        Exit For
                    End If
                    
                    'Set the next savings rate.  This will update the calculations.
                    WSPartSpouse.Range("D13").Value = NextSavingsRate
                    
                    'Get the results of the calculations
                    WSReIterate.Cells((X + 4), 11).Value = NextSavingsRate
                    WSReIterate.Cells((X + 4), 12).Value = WSResults.Range("D14").Value
                    WSReIterate.Cells((X + 4), 13).Value = WSResults.Range("D18").Value
                    WSReIterate.Cells((X + 4), 14).Value = WSResults.Range("D21").Value
                    
                    SuggestedIncrease = WSResults.Range("D18").Value
                    PersonalSavingRate = NextSavingsRate
                                     
                    'Check the percentage replacement and if it is greater then exit the loop
                    If WSResults.Range("D14").Value > WSResults.Range("D15").Value Then
                        WSReIterate.Range("B19").Value = PersonalSavingRate
                        Exit For
                    End If
             
        Next
         
    
    End If
    
    'There was no increase so setting them to the starting values
    If WSReIterate.Range("B18").Value = 0 Then WSReIterate.Range("B18").Value = WSReIterate.Range("B4").Value
    If WSReIterate.Range("B19").Value = 0 Then WSReIterate.Range("B19").Value = WSReIterate.Range("B5").Value
    
    'Calculate Pre Savings Rate Increase
    WSReIterate.Range("B15").Value = WSReIterate.Range("B18").Value - WSReIterate.Range("B4").Value
    If WSReIterate.Range("B15").Value < 0 Then WSReIterate.Range("B15").Value = 0
    
    'Calculate Person Savings Rate Increase
    WSReIterate.Range("B16").Value = WSReIterate.Range("B19").Value - WSReIterate.Range("B5").Value
    If WSReIterate.Range("B16").Value < 0 Then WSReIterate.Range("B16").Value = 0
    
    'Calculate Total Suggested Savings Rate
    WSReIterate.Range("B12").Value = WSReIterate.Range("B18").Value + WSReIterate.Range("B19").Value
   
    'Calculate Total Suggested Increase
    WSReIterate.Range("B13").Value = WSReIterate.Range("B15").Value + WSReIterate.Range("B16").Value
    
    
    'If Auto increase is on and no suggested increase then get the staring graph numbers again to make them same.  Note the difference may
    'have occurred due to increasing the auto increase maximum on a refeed.  The participant is on track
    SuggestedIncrease = Application.WorksheetFunction.Round(WSReIterate.Range("B13").Value, 2)
    If AI = "Y" And SuggestedIncrease < 0.01 Then
                    
        'Starting Graph Numbers
        GetStartingGraphData
                        
    End If
    
    'Get Final Graph Numbers
    GetFinalGraphData
    
End Sub


Sub GetStartingGraphData()

    Dim WSNewGraph As Worksheet
    Dim WSProject As Worksheet
    Dim X As Integer
    Dim Age As Integer
    
    Set WSProject = Worksheets("Project")
    Set WSNewGraph = Worksheets("NewGraph")
    
    'Clear Previous Data
    WSNewGraph.Range("P2", "Q110").Value = ""
    
     Application.ScreenUpdating = False

    
    For X = 0 To 100
    
        Age = WSProject.Cells(6 + X, 69)
        CurrentSavingsBalance = WSProject.Cells(6 + X, 70)
        
        WSNewGraph.Cells(2 + X, 16) = Age
        WSNewGraph.Cells(2 + X, 17) = CurrentSavingsBalance
        
        If CurrentSavingsBalance < 0 Then
            Exit For
        End If
    
    Next X

     Application.ScreenUpdating = True


End Sub

Sub GetFinalGraphData()

    Dim WSNewGraph As Worksheet
    Dim WSProject As Worksheet
    Dim X As Integer
    Dim Age As Integer
    
    Set WSProject = Worksheets("Project")
    Set WSNewGraph = Worksheets("NewGraph")
    
       
     Application.ScreenUpdating = False

    
    For X = 0 To 100
    
        Age = WSProject.Cells(6 + X, 69)
        CurrentSavingsBalance = WSProject.Cells(6 + X, 70)
        
        WSNewGraph.Cells(2 + X, 16) = Age
        WSNewGraph.Cells(2 + X, 18) = CurrentSavingsBalance
        
        If CurrentSavingsBalance < 0 Then
            Exit For
        End If
    
    Next X

     Application.ScreenUpdating = True


End Sub
